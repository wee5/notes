泛型是什么？
    即参数化类型，在不创建新的类型的情况下，通过泛型指定的不同类型来控制形参具体限制的类型
    
    
泛型只存在于编译期，在运行期会"去泛型化"
    在运行期，泛型类会根据运行时的参数，将泛型转换为具体类型，即运行期无泛型一说
    
    
泛型分类
    泛型类、泛型接口、泛型方法
    
    
泛型类
    
    写法：class Clazz<T> {}
    
    
泛型接口

    定义泛型类的写法：interface Inter<T> {}
    实现泛型接口的写法：class Clazz<T> implements Inter<T> {}
                      class Clazz implements Inter<String> {}
                      

泛型方法
    在方法上定义了泛型的，才是泛型方法
    使用类上定义的泛型的方法，只是使用泛型，该方法不是泛型方法
    静态方法不能使用类申明的泛型，只能使用本方法申明的泛型
    
    写法：<T> void method(T t) {}
          <T,K> K method(T t) {}
          
          
泛型边界
    上边界：<T extends String>
    下边界：<T super String>
    
    
泛型和通配符
    泛型：表示一种类型，但该类型在编译期未知，运行期才能确定
    通配符：代指当前类型

理解泛型在编译运行期间的过程
    .java：定义泛型类（申明泛型）————>实例化泛型类（指定类型）
    丨
    丨编译期：检查泛型合法性
    丨
    .class：
    丨
    丨运行期：擦除泛型，改为具体类型
    丨
    内存表现
    
    
泛型边界
    ArrayList<? super Animal>：
        可以传入Animal及其子类，元素向上转型为Animal类型，再传入ArrayList<? super Animal>
        传出时为Object类型，因为无法确定泛型的具体类型，只知道泛型为Animal的父类，所以传出时只能是Object
        
    ArrayList<? extends Animal>：
        传出时是Animal类型，因为所有元素具体类型不确定，但都是Animal类型或它的子类，统一当作Animal处理
        不能传入元素，因为只知道泛型为Animal类型或它的子类，但不知道具体类型，传入任何元素都可能与泛型类型不一致
        
    
如何理解"上边界泛型不能传入元素"
    上边界泛型只能确定泛型的父类，无法确定泛型的具体类型，传入任何类型都可能导致与泛型类型不一致
    
    
如何理解泛型的"传入"
    为泛型类中的泛型变量赋值
    
    
通配符T,?和边界联合使用
    <T extends list> void method(ArrayList<? extends Animal> list) {}
    上边界泛型作为返回值，可以限制从返回值中取出元素的类型
